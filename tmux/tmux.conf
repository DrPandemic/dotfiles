## set the default TERM
set -g default-terminal screen
#
### update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
### determine if we should enable 256-colour support
if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

# remap prefix to Control + a
set-option -g prefix C-s
unbind C-b
################################################################################
# Enable Mouse actions
# setw  -g mode-mouse on # incompatible in tmux 2.0+
set -g mouse on
# set   -g mouse-resize-pane off # incompatible in tmux 2.0+
# bind -T root MouseDrag1Border resize-pane -M # default
unbind -T root MouseDrag1Border

# set   -g mouse-select-pane on # incompatible in tmux 2.0+
# Left click on a pane selects it
bind -T root MouseDown1Pane select-pane -t=\; send-keys -M # default
# unbind -temacs-copy MouseDown1Pane
# bind   -temacs-copy MouseUp1Pane cancel

# Right click on a pane selects and marks it
bind -T root MouseDown3Pane select-pane -t= -m # default

# Middle click on a pane *in copy-mode* quits copy-mode
# bind -temacs-copy MouseUp2Pane cancel
# unbind -temacs-copy MouseUp2Pane

# set   -g mouse-select-window on # incompatible in tmux 2.0+
# Left click on a window name in status bar to select it
bind -T root MouseDown1Status select-window -t= # default
# Middle click on a window name in status bar to kill it
bind -T root MouseDown2Status kill-window

unbind -T root WheelUpPane
unbind -T root WheelDownPane
# Do mouse wheel-up to enter copy mode and do page-up
# https://groups.google.com/d/msg/tmux-users/XTrSVUR15Zk/3iyJLMyQ7PwJ
# Below binding did not work
#   bind -T root WheelUpPane if -Ft= '#{mouse_any_flag}' 'if -Ft= "#{pane_in_mode}" "copy-mode -u" "send-keys -M"' 'copy-mode -u'
# Below works and allows the WheelUpPane binding in emacs-copy table to be effective
bind -T root WheelUpPane if -Ft= '#{mouse_any_flag}' 'send-keys -M' 'if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -u"'
# |---------------------+-----------------------------------------+--------------------------------|
# | using mouse? AND .. | #{pane_in_mode} (already in copy-mode?) | action                         |
# |---------------------+-----------------------------------------+--------------------------------|
# | Yes                 | Don't care                              | Send the mode keys             |
# | No                  | Yes                                     | Send the mode keys             |
# | No                  | No                                      | Enable copy-mode and do PageUp |
# |---------------------+-----------------------------------------+--------------------------------|

# Once in copy-mode, mouse wheel scrolls scrolls by half pages
# bind -temacs-copy WheelUpPane   scroll-up
# bind -temacs-copy WheelDownPane scroll-down

#set -g mouse-utf8 off
# The special token ‘{mouse}’ or ‘=’ may be used as target-window or target-pane in
# commands bound to mouse key bindings. Example: -t =

bind | split-window -h -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Make the current window the first window
bind T swap-window -t 1

# Pane resize
bind j resize-pane -D 10
bind k resize-pane -U 10
bind h resize-pane -L 10
bind l resize-pane -R 10

set -g default-terminal "screen-256color"

#set -g status-bg black
#set -g status-fg green

set-option -g status on
set-option -g status-interval 2
#set-option -g status-utf8 on

set-option -g status-justify "centre"
set-option -g status-left-length 90
set-option -g status-right-length 90
set-option -g status-left "#(~/Projects/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/Projects/tmux-powerline/powerline.sh right)"
set-option -g status-bg colour235
set-option -g status-fg colour136

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?v?x?)(diff)?$"'
#bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Initial index
set -g base-index 1
setw -g pane-base-index 1
